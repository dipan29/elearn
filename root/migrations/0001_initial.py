# Generated by Django 2.2 on 2020-04-20 16:17

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PageInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Institute of Academic Excellence', help_text='Enter the name of your page', max_length=300)),
                ('email', models.CharField(default='Email not set', help_text='Enter your company/support email', max_length=100)),
                ('currency', models.CharField(default='â‚¹', max_length=20)),
                ('home_banner', ckeditor.fields.RichTextField(default='The flashy tagline goes here', help_text='Enter the tagline in the home banner', max_length=2000)),
                ('tag_1', ckeditor.fields.RichTextField(default='Your homepage Tagline 1 goes here !', help_text='You fancy webpage features must go in here', max_length=500)),
                ('tag_2', ckeditor.fields.RichTextField(default='Your homepage Tagline 2 goes here !', help_text='You fancy webpage features must go in here', max_length=500)),
                ('tag_3', ckeditor.fields.RichTextField(default='Your homepage Tagline 3 goes here !', help_text='You fancy webpage features must go in here', max_length=500)),
                ('about', ckeditor.fields.RichTextField(help_text='Enter about Information for the Website as normal Word Doc')),
                ('contact', ckeditor.fields.RichTextField(help_text='Enter Contact like email phone address like normal page')),
                ('services', ckeditor.fields.RichTextField(help_text='Enter the range of services provided to users')),
                ('tnc', ckeditor.fields.RichTextField(default='tnc', help_text='Enter the Terms and Condition')),
                ('privacy_policy', ckeditor.fields.RichTextField(default='privacy', help_text='Enter your Privacy Policy')),
                ('faqs', ckeditor.fields.RichTextField(default='faqs', help_text='Enter some FAQs')),
                ('facebook_link', models.CharField(blank=True, max_length=300)),
                ('twitter_link', models.CharField(blank=True, max_length=300)),
                ('instagram_link', models.CharField(blank=True, max_length=300)),
                ('linkedin_link', models.CharField(blank=True, max_length=300)),
                ('youtube_link', models.CharField(blank=True, max_length=300)),
                ('vimeo_link', models.CharField(blank=True, max_length=300)),
                ('contact_number', models.CharField(blank=True, help_text='Enter your contact number', max_length=14)),
                ('payment_id', models.CharField(blank=True, help_text='Enter the payment ID in which you want to get payments', max_length=300)),
            ],
            options={
                'verbose_name': 'PageInfo',
                'verbose_name_plural': 'PageInfo(s)',
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('sub_title', models.CharField(max_length=300)),
                ('name', models.CharField(max_length=300)),
                ('thumbnail', models.ImageField(blank=True, help_text='This field expects an user image file, 480x360 is ideal', upload_to='testimonials/')),
            ],
        ),
        migrations.CreateModel(
            name='Enroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_access', models.BooleanField(default=False, help_text='Making this True will enable the user to access the course, after payment is recieved')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrolls', to='courses.Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Enrollments',
                'verbose_name_plural': 'Enrollments',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Enter the unique code here e.g COURSELOVE20', max_length=20)),
                ('value', models.IntegerField(default=0, help_text='Enter discount in percentage')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.Course')),
            ],
        ),
    ]
