# Generated by Django 2.2 on 2020-03-15 16:47

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import embed_video.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, primary_key=True, serialize=False, unique=True)),
                ('short_description', models.TextField(max_length=60)),
                ('content', ckeditor.fields.RichTextField(help_text='Enter the entire course outflow just like you would in a word document')),
                ('outcome', models.CharField(help_text='Outcome/Achievements after successful completion of the course', max_length=200)),
                ('requirements', models.CharField(help_text='Prequisites for enroll in the Course', max_length=200)),
                ('language', models.CharField(help_text='Medium/Languages used in the lesson videos', max_length=200)),
                ('price', models.FloatField(help_text='Price of the course, to be entered in Indian Currency', validators=[django.core.validators.MinValueValidator(9.99)])),
                ('level', models.CharField(help_text='Level can be, 1/2/3 or Beginner/Intermidiate/Advance', max_length=20)),
                ('thumbnail', models.ImageField(help_text='This field expects an image file, 480x360 is ideal', upload_to='thumbnails/')),
                ('video', embed_video.fields.EmbedVideoField(blank=True, help_text='Enter the link to the video from any streaming platform, Vimeo Preffered', max_length=500)),
                ('is_published', models.BooleanField(default=True, help_text='Only set this to False, when the course is under making and you wish not to make it public')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Updating course regularly ensures better reach')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.Category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Enter the Lesson's title", max_length=100)),
                ('duration', models.IntegerField(help_text='Enter video clip duration in Minutes', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('video', embed_video.fields.EmbedVideoField(blank=True, help_text='Vimeo Video is preffered since it ensure data protection', max_length=500)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='courses.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.Course')),
            ],
        ),
    ]
